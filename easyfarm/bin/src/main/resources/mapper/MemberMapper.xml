<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="easyfarm.dao.MemberMapper">

	<resultMap type="Member" id="memberResultMap">   
      <result property="memberId" 		column="member_id"/>
      <result property="memberPw"		column="member_pw"/>
      <result property="memberName" 	column="member_name"/>
      <result property="levelCode"	 	column="level_code"/>
      <result property="memberGender" 	column="member_gender"/>
      <result property="memberAddress" 	column="member_address"/>
      <result property="memberEmail" 	column="member_email"/>
      <result property="memberPhone" 	column="member_phone"/>
      <result property="memberIdenNum" 	column="member_iden_num"/>
      <result property="memberRegDate"	column="member_reg_date"/>
      <result property="memberStatus" 	column="member_status"/>
      <result property="levelName" 		column="level_name"/>
      <result property="useStatus" 		column="use_status"/>
      <result property="memberRegDate" 		column="reg_date"/>

   </resultMap>
   

   
	<select id="countMember" resultType="int">
		SELECT COUNT(*) FROM tb_member
	</select>
	
	<select id="countSearchMember" resultType="int">
		SELECT 
			 COUNT(*)
		FROM 
			tb_member AS m
		JOIN
			tb_member_level AS l
		on
			m.level_code = l.level_code
			
		<if test="searchValue != null and searchValue != ''">
			WHERE
			<if test="searchKey != null and searchKey != ''">
				<if test="searchKey == 'memberId'">		m.member_id 	like concat('%',#{searchValue},'%')</if>
				<if test="searchKey == 'memberName'"> 	m.member_name 	like concat('%',#{searchValue},'%')</if>
				<if test="searchKey == 'memberEmail'">	m.member_email 	like concat('%',#{searchValue},'%')</if>
				<if test="searchKey == 'memberStatus'">	m.member_status like concat('%',#{searchValue},'%')</if>
						
			</if>
		
		</if>
	</select>
	
	<select id="getLogin" resultType="String">
		SELECT 
			login_code
		FROM 
			tb_login	
		WHERE 
			login_member_id = #{memberId};
	</select>
	
	<update id="updateLogin">
		UPDATE tb_login
			SET
				login_date=NOW(),
				logout_date=NOW()
			WHERE login_member_id = #{memberId};
	</update>
	
	<update id="updateLogout">
		UPDATE tb_login
			SET
				logout_date=NOW()
			WHERE login_member_id = #{memberId};
	</update>
	
	<select	id="getMemberInfoById" resultMap="memberResultMap" parameterType="String">
			SELECT 
				 m.member_id
				,m.member_pw
				,m.member_name
				,m.level_code
				,m.member_gender
				,m.member_address
				,m.member_email
				,m.member_phone
				,m.member_iden_num
				,m.member_reg_date
				,m.member_status
				,l.level_name
			FROM 
				tb_member AS m
			JOIN
				tb_member_level AS l
			ON
			m.level_code = l.level_code
			
			WHERE m.member_id = #{memberId};
	</select>

	<insert id="addMember" parameterType="Member">
	INSERT INTO tb_member
		(member_id
		, member_pw
		, member_name
		, level_code
		, member_gender
		, member_address
		, member_email
		, member_phone
		, member_iden_num
		, member_reg_date
		, member_status
		)
		VALUES 
		(#{memberId}
		, #{memberPw}
		, #{memberName}
		, #{levelCode}
		, #{memberGender}
		, #{memberAddress}
		, #{memberEmail}
		, #{memberPhone}
		, #{memberIdenNum}
		, NOW()
		, #{memberStatus})
	</insert>
	
	<select id="getMemberList" resultMap="memberResultMap">
		SELECT 
			 m.member_id
			,m.member_pw
			,m.member_name
			,m.level_code
			,m.member_gender
			,m.member_address
			,m.member_email
			,m.member_phone
			,m.member_iden_num
			,m.member_reg_date
			,m.member_status
			,l.level_name
		FROM 
			tb_member AS m
		JOIN
			tb_member_level AS l
		on
			m.level_code = l.level_code
		<if test="searchValue != null and searchValue != ''">
			WHERE
			<if test="searchKey != null and searchKey != ''">
				<if test="searchKey == 'memberId'">		m.member_id 	like concat('%',#{searchValue},'%')</if>
				<if test="searchKey == 'memberName'"> 	m.member_name 	like concat('%',#{searchValue},'%')</if>
				<if test="searchKey == 'memberEmail'">	m.member_email 	like concat('%',#{searchValue},'%')</if>
				<if test="searchKey == 'memberStatus'">	m.member_status like concat('%',#{searchValue},'%')</if>
						
			</if>
		
		</if>
	
		LIMIT #{startNum}, #{rowPerPage}
	</select>
	
	<update id="modifyMember" parameterType="Member">
		UPDATE tb_member
		<trim prefix="SET" suffixOverrides=",">
			<if test="memberPw != null and memberPw != ''.toString()">
				member_pw = #{memberPw},
			</if>
			<if test="levelCode != null and levelCode != ''.toString()">
				level_code = #{levelCode},
			</if>
			<if test="memberEmail != null and memberEmail != ''.toString()">
				member_email = #{memberEmail},
			</if>
			<if test="memberAddress != null and memberAddress != ''.toString()">
				member_address = #{memberAddress},
			</if>
			<if test="memberPhone != null and memberPhone != ''.toString()">
				member_phone = #{memberPhone},
			</if>
			<if test="memberStatus != null and memberStatus != ''.toString()">
				member_status = #{memberStatus},
			</if>
		</trim>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			member_id = #{memberId}
		</trim>		
	</update>
	
	<update id="removeUpdateMember" parameterType="Member">
			UPDATE tb_member
		<trim prefix="SET" suffixOverrides=",">
			
			<if test="memberStatus != null and memberStatus != ''.toString()">
				member_status = #{memberStatus},
			</if>
		</trim>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			member_id = #{memberId}
		</trim>		
	</update>
	
	<!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ권한 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ-->
	
	<select id="getAuthority" resultMap="memberResultMap" >
		SELECT 
			  level_code
			, level_name
			, member_id
			, reg_date
			, use_status
		FROM 
			tb_member_level
		
	</select>
	
	<select id="getAuthorityByCode" resultMap="memberResultMap" resultType="String">
		SELECT 
			  level_code
			, level_name
			, member_id
			, reg_date
			, use_status
		FROM 
			tb_member_level
		Where level_code = #{levelCode}
	</select>
	
	<update id="modifyAuthority" parameterType="Member" >
		UPDATE tb_member_level
		SET
			level_name = #{levelName},
			member_id = #{memberId},
			reg_date = NOW(),
			use_status = #{useStatus} 
		WHERE 
			level_code= #{levelCode}
	</update>
	
	<insert id="addAuthority" parameterType="String">
		INSERT INTO tb_member_level
			(
			level_code
			, level_name
			, member_id
			, reg_date
			, use_status)
			VALUES (
			sf_member_level_max_code()
			, #{levelName}
			, #{memberId}
			, NOW()
			, #{useStatus})
			
	</insert>
	
	<delete id="removeAuthority" parameterType="String">
		DELETE FROM tb_member_level WHERE level_code = #{levelCode}
	</delete>
	<insert id="addCancelMember" parameterType="Member">
	 INSERT INTO tb_cancel_member
		(cancel_member_code
		, cancel_member_id
		, cancel_member_pw
		, cancel_member_name
		, level_num
		, cancel_member_gender
		, cancel_member_address
		, cancel_member_email
		, cancel_member_phone
		, cancel_member_iden_num
		, cancel_member_reg_date
		, cancel_member_cancel_date
		, cancel_member_reason)
		VALUES (
		sf_cancel_member_max_code()	
		, #{memberId}
		, #{memberPw}
		, #{memberName}
		, #{levelCode}
		, #{memberGender}
		, #{memberAddress}
		, #{memberEmail}
		, #{memberPhone}
		, #{memberIdenNum}
		, #{memberRegDate}
		, NOW()
		, #{cancelMemberReason})
	</insert>
	
</mapper>
