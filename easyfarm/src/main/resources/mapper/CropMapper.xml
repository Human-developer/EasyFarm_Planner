<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="easyfarm.dao.CropMapper">
	
	<!--작물  -->
	<resultMap type="Crop" id="CropResultMap">
		<result property="cropCode"		column="crop_code"/>
		<result property="cropCate"		column="crop_cate"/>
		<result property="cropName"		column="crop_name"/>
		<result property="useStatus"	column="use_status"/>
		<result property="regMemberId"	column="reg_member_id"/>
		<result property="regDate"		column="reg_date"/>
		<association property="member" javaType="Member">
		<id 	property="memberId" 	column="member_id"/>
		</association>
	</resultMap> 
   
    <!-- 작업단계 -->      
	<resultMap type="CropWorkStage" id="CropWorkStageResultMap">
		<result property="cropPhaseInfoCode"	column="crop_phase_info_code"/>
		<result property="cropCode"				column="crop_code"/>
		<result property="workphase"			column="workphase"/>
		<result property="workphaseName"		column="workphase_name"/>
		<result property="useStatus"			column="use_status"/>
		<result property="regMemberId"			column="reg_member_id"/>
		<result property="regDate"				column="reg_date"/>
		<association property="cropDetailCategory" javaType="CropDetailCategory" >
			<id property="commonWorkphaseCateCode"		column="common_workphase_cate_code"/>
			<result property="commonWorkphaseCateCode"	column="common_workphase_cate_code"/>
			<result property="commonWorkphaseCateName"	column="common_workphase_cate_name"/>
			<result property="regMemberId"				column="reg_member_id"/>
			<result property="regDate"					column="reg_date"/>
		</association>
		<association property="crop" javaType="Crop" >
			<id property="cropCode"			column="crop_code"/>
			<result property="cropCode"		column="crop_code"/>
			<result property="cropCate"		column="crop_cate"/>
			<result property="cropName"		column="crop_name"/>
			<result property="useStatus"	column="use_status"/>
			<result property="regMemberId"	column="reg_member_id"/>
			<result property="regDate"		column="reg_date"/>
		</association>
	</resultMap>          
	
	<!-- 상세작업항목 -->
	<resultMap type="CropDetailCategory" id="CropDetailCategoryResultMap">
		<result property="commonWorkphaseCateCode"	column="common_workphase_cate_code"/>
		<result property="commonWorkphaseCateName"	column="common_workphase_cate_name"/>
		<result property="regMemberId"			column="reg_member_id"/>
		<result property="regDate"				column="reg_date"/>
	</resultMap>          
	
	<!-- 품목카테고리 -->
	<resultMap type="StockCate" id="resultStockCate">
		<result property="stockCateCode"		column="stock_cate_code"/>
		<result property="stockCateName"		column="stock_cate_name"/>
		<result property="regMemberId"			column="reg_member_id"/>
		<result property="regDate"				column="reg_date"/>
	</resultMap>
	<!-- 공과금 카테고리 -->
	<resultMap type="TaxPayCate" id="resultTaxPayCate">
		<result property="taxPayCateCode"		column="tax_pay_cate_code"/>
		<result property="taxPayCateName"		column="tax_pay_cate_name"/>
		<result property="useStatus"			column="use_status"/>
		<result property="regMemberId"			column="reg_member_id"/>
		<result property="regDate"				column="reg_date"/>
	</resultMap>
	
	
	
	
	<select id="getCropCode" parameterType="map" resultMap="CropResultMap">
	SELECT 
		c.crop_code,
		c.crop_cate,
		c.crop_name,
		c.use_status,
		c.reg_member_id,
		c.reg_date
	FROM
		tb_crop	as c
	<trim prefix="WHERE" prefixOverrides="AND |OR ">
		<if test="searchKey != null and searchKey != ''.toString()">
			${searchKey} LIKE CONCAT('%',#{searchValue},'%')					
		</if>
	</trim>
		order by cast(SUBSTRING_INDEX(crop_code,'_',-1)AS UNSIGNED)
	</select>
	
	<select id="getCropWorkStage" parameterType="String" resultMap="CropWorkStageResultMap">
	SELECT 
		cp.crop_phase_info_code, 
		cp.crop_code, 
		c.crop_name,
		cp.workphase, 
		cp.workphase_name, 
		cp.use_status, 
		cp.reg_member_id, 
		cp.reg_date 
	FROM 
		tb_crop_phase_info	as cp
	inner join 
		tb_crop as c
	on
	 cp.crop_code = c.crop_code 
		order by cp.crop_code asc, cp.workphase asc
	</select>
	
	<select id="getCropDetailCategory" parameterType="String" resultMap="CropDetailCategoryResultMap">
	SELECT 
		cwc.common_workphase_cate_code, 
		cwc.common_workphase_cate_name, 
		cwc.reg_member_id, 
		cwc.reg_date 
	FROM 
		tb_common_workphase_cate	as cwc
	 	<trim prefix="WHERE" prefixOverrides="AND|OR ">
			<if test="commonWorkphaseCateCode != null and commonWorkphaseCateCode != ''.toString()">
				cwc.common_workphase_cate_code = #{commonWorkphaseCateCode}
			</if>
		</trim>
	order by cast(SUBSTRING_INDEX(common_workphase_cate_code,'_',-1)AS UNSIGNED)
	</select>
	
	<select id="getTaxPayCateList" parameterType="String" resultMap="resultTaxPayCate">
	SELECT 
		tax_pay_cate_code
		, tax_pay_cate_name
		, use_status
		, reg_member_id
		, reg_date
	FROM 
		tb_tax_pay_cate;
  	</select>



	<insert id="addCrop" parameterType="map">
	INSERT INTO 
		tb_crop
		(crop_code ,crop_cate, crop_name, use_status, reg_member_id, reg_date )
	VALUES (
	sf_crop_max_code()
	<if test="crop.cropCate != null and crop.cropCate != ''.toString()">
	,#{crop.cropCate}
	</if>
	, #{crop.cropName}
	, 'O'
	, #{memberId}
	, NOW()
	)
	</insert>
	
	<insert id="addCropWorkStage" parameterType="map">
		INSERT INTO
	 tb_crop_phase_info
	(crop_phase_info_code,crop_code, workphase, workphase_name, use_status, reg_member_id, reg_date)
	VALUES (
	sf_cropWorkPhase_max_code()
	,#{crop.cropCode}
	, #{crop.workphase}
	, #{crop.workphaseName}
	, 'O'
	, #{memberId}
	, NOW()
	)
	
	</insert>
	
	<insert id="addCropDetailCategory" parameterType="map">
	INSERT INTO 
		tb_common_workphase_cate
		( common_workphase_cate_code,common_workphase_cate_name, reg_member_id, reg_date )
	VALUES (
		sf_commonWorkphaseCateCode_max_code()
		, #{crop.commonWorkphaseCateName}
		, #{memberId}
		, NOW()
	)
	</insert>
	
	<insert id="addStockCate" parameterType="map">
	INSERT INTO tb_stock_cate(
		stock_cate_code
		, stock_cate_name
		, reg_member_id
		, reg_date
	)
	VALUES (
		sf_stock_item_max_code_yoo()<!-- 함수 다시 만들기 -->
		, #{stockCate.stockCateName}
		, #{memberId}
		, NOW()
	)
	</insert>
	
	<insert id="addTaxPayCate" parameterType="map">
	INSERT INTO tb_tax_pay_cate(
		tax_pay_cate_code
		, tax_pay_cate_name
		, use_status
		, reg_member_id
		, reg_date
		)
	VALUES(
		sf_tax_pay_cate_max_code()
		, #{taxPayCate.taxPayCateName}
		, 'O'
		, #{memberId}
		, NOW()
		);
	</insert>






	<update id="modifyCrop" parameterType="map">
	UPDATE tb_crop
		<trim prefix="SET" suffixOverrides=",">
			<if test="crop.cropCate != null and crop.cropCate != ''.toString()">
			crop_cate	=#{crop.cropCate},
			</if>
			<if test="crop.cropName != null and crop.cropName != ''.toString()">
			crop_name	=#{crop.cropName},
			</if>
			<if test="crop.useStatus != null and crop.useStatus != ''.toString()">
			use_status	=#{crop.useStatus}
			</if>
		</trim>
	WHERE crop_code=#{crop.cropCode}
	</update>
	<update id="modifyCropWorkStage" parameterType="CropWorkStage">
	UPDATE tb_crop_phase_info
		<trim prefix="SET" suffixOverrides=",">
			workphase=#{workphase},
			<if test="workphaseName != null and workphaseName != ''.toString()">
			workphase_name=#{workphaseName},
			</if>
			<if test="useStatus != null and useStatus != ''.toString()">
			use_status=#{useStatus}
			</if>
		</trim>
	WHERE 
	crop_phase_info_code=#{cropPhaseInfoCode}
	</update>
	<update id="modifyCropDetailCategory" parameterType="CropDetailCategory">
	UPDATE tb_common_workphase_cate
		<trim prefix="SET" suffixOverrides=",">
			<if test="commonWorkphaseCateName != null and commonWorkphaseCateName != ''.toString()">
			common_workphase_cate_name=#{commonWorkphaseCateName}
			</if>
		</trim>
	WHERE 
	common_workphase_cate_code=#{commonWorkphaseCateCode}
	</update>
	<update id="modifyStockCate" parameterType="StockCate">
	UPDATE tb_stock_cate
		<trim prefix="SET" suffixOverrides=",">
			<if test="stockCateName != null and stockCateName != ''.toString()">
			stock_cate_name=#{stockCateName}
			</if>
		</trim>
	WHERE 
	stock_cate_code=#{stockCateCode}
	</update>
	<update id="modifyTaxPayCate" parameterType="TaxPayCate">
	UPDATE tb_tax_pay_cate
		<trim prefix="SET" suffixOverrides=",">
			<if test="taxPayCateName != null and taxPayCateName != ''.toString()">
			tax_pay_cate_name=#{taxPayCateName}
			</if>
		</trim>
	WHERE 
	tax_pay_cate_code=#{taxPayCateCode}
	</update>
	
	
	
	
	<select id="getcropCodeInfo" parameterType="String" resultMap="CropResultMap">
		SELECT 
			c.crop_code,
			c.crop_cate,
			c.crop_name,
			c.use_status,
			c.reg_member_id,
			c.reg_date
		FROM
			tb_crop	as c
			
			
		WHERE
		 	c.crop_code = #{cropCode};
	</select>
	<select id="getcropNameInfo" parameterType="String" resultMap="CropResultMap">
		SELECT 
			c.crop_code,
			c.crop_cate,
			c.crop_name,
			c.use_status,
			c.reg_member_id,
			c.reg_date
		FROM
			tb_crop	as c
			
			
		WHERE
		 	c.crop_name = #{cropName};
	</select>
	<select id="getcropPhaseInfo" parameterType="String" resultMap="CropWorkStageResultMap">
	SELECT 
		cp.crop_phase_info_code
		, cp.crop_code
		, c.crop_name
		, cp.workphase
		, cp.workphase_name
		, cp.use_status
		, cp.reg_member_id
		, cp.reg_date
	FROM
	 tb_crop_phase_info as cp
	 inner join
	 tb_crop as c
	 on
	  cp.crop_code = c.crop_code
	 where
	 crop_phase_info_code= #{cropPhaseInfoCode};
	</select>
	<select id="getcropPhaseInfo2" parameterType="String" resultMap="CropWorkStageResultMap">
	SELECT 
		cp.crop_phase_info_code
		, cp.crop_code
		, c.crop_name
		, cp.workphase
		, cp.workphase_name
		, cp.use_status
		, cp.reg_member_id
		, cp.reg_date
	FROM
	 tb_crop_phase_info as cp
	 inner join
	 tb_crop as c
	 on
	  cp.crop_code = c.crop_code
	 where
	 cp.workphase= #{workphase} and cp.crop_code = #{cropCode}
	</select>
	
	<select id="getCropListByCropCategory" resultMap="CropResultMap" resultType="map" parameterType="String">
		select
			*
		from tb_crop
		where
			use_status = 'O' and crop_cate = #{cropCategory}
	</select>
	
	<!--품목 카테고리 조회  -->
	<select id="getInfoStockCate" parameterType="String" resultMap="resultStockCate">
		SELECT 
			 s.stock_cate_code
			,s.stock_cate_name
			,s.reg_member_id
			,s.reg_date
		FROM
			tb_stock_cate as s
	 	<trim prefix="WHERE" prefixOverrides="AND|OR ">
			<if test="stockCateCode != null and stockCateCode != ''.toString()">
				s.stock_cate_code = #{stockCateCode}
			</if>
		</trim>
	</select>
	<select id="getInfoTaxPayCate" parameterType="String" resultMap="resultTaxPayCate">
		SELECT 
			 t.tax_pay_cate_code
			,t.tax_pay_cate_name
			,t.use_status
			,t.reg_member_id
			,t.reg_date
		FROM
			tb_tax_pay_cate as t
	 <!-- 	<trim prefix="WHERE" prefixOverrides="AND|OR ">
			<if test="taxPayCateCode != null and taxPayCateCode != ''.toString()">
				t.tax_pay_cate_code = #{taxPayCateCode}
			</if>
		</trim> -->
		where
		t.tax_pay_cate_code = #{taxPayCateCode}
	</select>
	
	<delete id="removeStockCate">
	DELETE FROM tb_stock_cate WHERE stock_cate_code=#{stockCateCode}
	</delete>
	<delete id="removeTaxPayCate">
	DELETE FROM tb_tax_pay_cate WHERE tax_pay_cate_code=#{taxPayCateCode}
	</delete>
	
	
	
</mapper>