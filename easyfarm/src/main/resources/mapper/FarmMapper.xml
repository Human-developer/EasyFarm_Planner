<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="easyfarm.dao.FarmMapper">
	<resultMap type="Farm" id="farmResultMap">
		<id property="farmCode" column="farm_code" />
		<result property="farmName" column="farm_name"/>
		<result property="ceoId" column="ceo_member_id"/>
		<result property="farmMemberLevel" column="farm_level_code"/>
		<result property="farmArea" column="farm_area"/>
		<result property="farmAddress" column="farm_address"/>
		<result property="farmPublicStatus" column="farm_public_status"/>
		<result property="farmRegDate" column="farm_reg_date"/>
		<result property="farmMemberCount" column="farm_member_count"/>
	</resultMap>

	<resultMap type="FarmMember" id="farmMemberResultMap">
		<id property="farmMemberCode" column="farm_member_code" />
		<result property="farmCode" column="farm_code"/>
		<result property="farmMemberId" column="farm_member_id"/>
		<result property="farmLevelCode" column="farm_level_code"/>
		<result property="farmLevelName" column="farm_level_name"/>
		<result property="farmJoinApprovalDate" column="farm_join_approval_date"/>
		<result property="farmMemberStatus" column="farm_member_status"/>
		<result property="farmMemberAge" column="member_age"/>
		<association property="member" javaType ="Member">
			<id property="memberId" 		column="member_id"/>
			<result property="memberPw"		column="member_pw"/>
			<result property="memberName" 	column="member_name"/>
			<result property="levelCode"	 	column="level_code"/>
			<result property="memberGender" 	column="member_gender"/>
			<result property="memberAddress" 	column="member_address"/>
			<result property="memberEmail" 	column="member_email"/>
			<result property="memberPhone" 	column="member_phone"/>
			<result property="memberIdenNum" 	column="member_iden_num"/>
			<result property="memberRegDate"	column="member_reg_date"/>
			<result property="memberStatus" 	column="member_status"/>
			<result property="levelName" 		column="level_name"/>
			<result property="useStatus" 		column="use_status"/>
			<result property="memberRegDate" 	column="reg_date"/>
			
			<result property="loginCode" 		column="login_code"/>
			<result property="loginMemberId" 	column="login_member_id"/>
			<result property="loginDate" 		column="login_date"/>
			<result property="logoutDate" 	column="logout_date"/>
		</association>
	</resultMap>
	
	<resultMap type="FarmMemberJoin" id="farmJoinResultMap">
		<id property="farmJoinCode" column ="farm_join_code"/>
		<result property="farmCode" column ="farm_code"/>
		<result property="farmJoinRequestMemberId" column ="farm_join_request_member_id"/>
		<result property="memberName" column ="member_name"/>
		<result property="memberAge" column ="member_age"/>
		<result property="farmJoinRequestDate" column ="farm_join_request_date"/>
		<result property="farmJoinPurpose" column ="farm_join_purpose"/>
		<result property="farmJoinApproval" column ="farm_join_approval"/>
		<result property="farmJoinApprovalMemberId" column ="farm_join_approval_member_id"/>
		<association property="farm" javaType="Farm">
			<id property="farmCode" column="farm_code" />
			<result property="farmName" column="farm_name"/>
			<result property="ceoId" column="ceo_member_id"/>
			<result property="farmMemberLevel" column="farm_level_code"/>
			<result property="farmArea" column="farm_area"/>
			<result property="farmAddress" column="farm_address"/>
			<result property="farmPublicStatus" column="farm_public_status"/>
			<result property="farmRegDate" column="farm_reg_date"/>
			<result property="farmMemberCount" column="farm_member_count"/>
		</association>
	</resultMap>
	
	
	<resultMap type="FarmCancelRequest" id="farmCancelMemberResultMap">
		<id property="cancelRequestCode" column="farm_cancel_request_code" />
		<result property="cancelRequestMemberCode" column="farm_cancel_request_farm_member_code"/>
		<result property="farmCode" column="farm_code"/>
		<result property="cancelRequestReason" column="farm_cancel_request_reason"/>
		<result property="cancelRequestDate" column="farm_cancel_request_date"/>
		<result property="cancelApproval" column="farm_cancel_approval"/>
		<result property="cancelApprovalReason" column="farm_cancel_approval_reason"/>
		<result property="cancelApprovalDate" column="farm_cancel_approval_date"/>
		<result property="cancelApprovalMemberId" column="farm_cancel_approval_member_id"/>
		<association property="farmMember" javaType="FarmMember">
			<id property="farmMemberCode" column="farm_member_code" />
			<result property="farmCode" column="farm_code"/>
			<result property="farmMemberId" column="farm_member_id"/>
			<result property="farmLevelCode" column="farm_level_code"/>
			<result property="farmLevelName" column="farm_level_name"/>
			<result property="farmJoinApprovalDate" column="farm_join_approval_date"/>
			<result property="farmMemberStatus" column="farm_member_status"/>
		</association>
		<association property="member" javaType ="Member">
			<id property="memberId" 		column="member_id"/>
			<result property="memberPw"		column="member_pw"/>
			<result property="memberName" 	column="member_name"/>
			<result property="levelCode"	 	column="level_code"/>
			<result property="memberGender" 	column="member_gender"/>
			<result property="memberAddress" 	column="member_address"/>
			<result property="memberEmail" 	column="member_email"/>
			<result property="memberPhone" 	column="member_phone"/>
			<result property="memberIdenNum" 	column="member_iden_num"/>
			<result property="memberRegDate"	column="member_reg_date"/>
			<result property="memberStatus" 	column="member_status"/>
			<result property="levelName" 		column="level_name"/>
			<result property="useStatus" 		column="use_status"/>
			<result property="memberRegDate" 	column="reg_date"/>
			
			<result property="loginCode" 		column="login_code"/>
			<result property="loginMemberId" 	column="login_member_id"/>
			<result property="loginDate" 		column="login_date"/>
			<result property="logoutDate" 	column="logout_date"/>
		</association>
		<association property="farm" javaType="Farm">
			<id property="farmCode" column="farm_code" />
			<result property="farmName" column="farm_name"/>
			<result property="ceoId" column="ceo_member_id"/>
			<result property="farmMemberLevel" column="farm_level_code"/>
			<result property="farmArea" column="farm_area"/>
			<result property="farmAddress" column="farm_address"/>
			<result property="farmPublicStatus" column="farm_public_status"/>
			<result property="farmRegDate" column="farm_reg_date"/>
			<result property="farmMemberCount" column="farm_member_count"/>
		</association>
	</resultMap>
	<!-- 농가명 중복확인 -->
	<select id="farmByName" resultMap="farmResultMap" parameterType="String" >
		SELECT 
			farm_code, 
			farm_name, 
			ceo_member_id, 
			farm_area, 
			farm_address, 
			farm_public_status, 
			farm_reg_date
		FROM 
			tb_farm
		WHERE
			farm_name = #{farmName}
	</select>
	<!-- 농가명 중복확인 -->
	
	<!-- 농가 등록 -->
	<insert id="addFarm" parameterType="Farm">
		INSERT INTO tb_farm
			( 
			farm_code,
			farm_name, 
			ceo_member_id, 
			farm_area, 
			farm_address, 
			farm_public_status, 
			farm_reg_date)
		VALUES 
			( 
			sf_farm_max_code(),
			#{farmName}, 
			#{ceoId}, 
			#{farmArea}, 
			#{farmAddress}, 
			#{farmPublicStatus}, 
			NOW())
	</insert>
	<!-- 농가 등록 -->
	
	<!-- 농가회원등록 -->
	<insert id="addFarmMember" parameterType="FarmMember">
		INSERT INTO tb_farm_member
			( 
			farm_member_code,
			farm_code, 
			farm_member_id, 
			farm_level_code, 
			farm_join_approval_date, 
			farm_member_status)
		VALUES 
			( 
			sf_farm_member_max_code(),
			sf_add_member_farm_code(#{farmCode}), 
			#{farmMemberId}, 
			#{farmLevelCode}, 
			NOW(), 
			#{farmMemberStatus})
	</insert>
	<!-- 농가회원등록 -->
	
	<!-- 내농가 목록 조회 -->
	<select id="myFamr" resultMap="farmResultMap" parameterType="String">
		 SELECT 
			f.farm_code, 
			f.farm_name, 
			f.ceo_member_id,
			fm.farm_level_code, 
			f.farm_area, 
			f.farm_address, 
			f.farm_public_status, 
			f.farm_reg_date,
			sf_farm_member_count(f.farm_code) AS 'farm_member_count'
		FROM 
			tb_farm f
			join
			tb_farm_member fm
		WHERE
			f.ceo_member_id =#{memberId}
		GROUP BY f.farm_code;
	</select>
	<!-- 내농가 목록 조회 -->
	
	<!-- 농가 상세보기 -->
	<select id="detailFarm" resultMap="farmResultMap" parameterType="Farm">
		SELECT 
			f.farm_code, 
			f.farm_name, 
			f.ceo_member_id,
			fm.farm_level_code, 
			f.farm_area, 
			f.farm_address, 
			f.farm_public_status, 
			f.farm_reg_date
		FROM 
			tb_farm f
			join
			tb_farm_member fm
			on
			f.farm_code = fm.farm_code
		WHERE
			fm.farm_member_id =#{ceoId}
			AND
			f.farm_code = #{farmCode}
			AND
			fm.farm_member_status ='정상'
		GROUP BY f.farm_code;
	</select>
	<!-- 농가 상세보기 -->
	
	<!-- 내 소속 농가 목록 조회 -->
	<select id="belongFarm" resultMap="farmResultMap" parameterType="String">
		SELECT 
			f.farm_code, 
			f.farm_name, 
			f.ceo_member_id,
			fm.farm_level_code, 
			f.farm_area, 
			f.farm_address, 
			f.farm_public_status, 
			f.farm_reg_date,
			sf_farm_member_count(f.farm_code) AS 'farm_member_count'
		FROM 
			tb_farm_member as fm
			join
			tb_farm_member_level AS l
			join
			tb_farm as f
			on
			fm.farm_code = f.farm_code
			AND
			fm.farm_member_id != f.ceo_member_id
		WHERE
			fm.farm_member_id = #{memberId}
			AND
			fm.farm_member_status ='정상'
		GROUP BY f.farm_code
	</select>
	<!-- 내 소속 농가 목록 조회 -->
	
	<!-- 농가 정보 조회 -->
	<select id="updateByFarm" resultMap="farmResultMap" parameterType="String">
		SELECT 
			f.farm_code, 
			f.farm_name, 
			f.ceo_member_id, 
			fm.farm_level_code,
			f.farm_area, 
			f.farm_address, 
			f.farm_public_status, 
			f.farm_reg_date
		FROM 
			tb_farm AS f
			join
			tb_farm_member AS fm
			on
			fm.farm_code = f.farm_code
		WHERE
			f.farm_code= #{farmCode}
			AND
			fm.farm_member_id = #{memberId}
	</select>
	<!-- 농가 정보 조회 -->
	
	<!-- 농가 수정 -->
	<update id="updateFarm" parameterType="Farm">
		UPDATE tb_farm
		<trim prefix="SET" suffixOverrides=",">
			<if test="ceoId != null">ceo_member_id=#{ceoId},</if>
			<if test="farmArea != null">farm_area=#{farmArea},</if>
			<if test="farmAddress != null">farm_address=#{farmAddress},</if>
			<if test="farmPublicStatus != null">farm_public_status=#{farmPublicStatus},</if>
		</trim>
		WHERE 
			farm_code=#{farmCode}
	</update>
	<!-- 농가 수정 -->
	
	<!-- 농가 검색 -->
	<select id="searchFarm" resultMap="farmResultMap" parameterType="String">
		SELECT 
			f.farm_code, 
			f.farm_name, 
			f.ceo_member_id, 
			f.farm_area, 
			f.farm_address, 
			f.farm_public_status, 
			f.farm_reg_date,
			sf_farm_member_count(f.farm_code) AS 'farm_member_count'
		FROM 
			tb_farm AS f
		WHERE
			f.farm_code NOT IN	(SELECT 
										fm.farm_code 
									FROM 
										tb_farm_member AS fm
									WHERE
										fm.farm_member_id = #{memberId}
									AND
									fm.farm_member_status = '정상')
			AND
			f.farm_public_status ='y'
		GROUP BY f.farm_code;
	</select>
	<!-- 농가 검색 -->
	
	<!-- 농가 회원 목록 조회 -->
	<select id="getMemberFarm" resultMap="farmMemberResultMap" parameterType="String">
		SELECT 
			fm.farm_member_code, 
			fm.farm_code, 
			fm.farm_member_id, 
			fm.farm_level_code, 
			fml.farm_level_name,
			fm.farm_join_approval_date, 
			fm.farm_member_status,
			m.member_name,
			m.member_phone,
			sf_iden_num_age(m.member_iden_num) AS member_age
		FROM 
			tb_farm_member AS fm
			join
			tb_farm_member_level AS fml
			on
			fm.farm_level_code = fml.farm_level_code
			join
			tb_member AS m
			on
			m.member_id = fm.farm_member_id
		WHERE
			fm.farm_code =#{farmCode}
			AND
			fm.farm_member_status = '정상'
			ORDER BY FIELD(fm.farm_level_code,'farm_level_1','farm_level_2','farm_level_3')	asc
	</select>
	<!-- 농가 회원 목록 조회 -->
	
	<!-- 농가 가입 신청 등록 -->
	<insert id="addFarmMemberJoin" parameterType="String">
		INSERT INTO tb_farm_member_join
			(farm_join_code, 
			farm_code, 
			farm_join_request_member_id, 
			farm_join_request_date, 
			farm_join_purpose
			)
		VALUES 
			(sf_farm_member_join_max_code(), 
			sf_farm_name_by_code(#{farmName}), 
			#{memberId}, 
			NOW(), 
			#{farmJoinPurpose})
	</insert>
	<!-- 농가 가입 신청 등록 -->
	
	<!-- 농가 가입 신청 목록 조회 -->
	<select id="listJoinFarm"  resultMap="farmJoinResultMap" parameterType="String">
		SELECT 
			farm_join_code, 
			farm_code, 
			farm_join_request_member_id, 
			farm_join_request_date, 
			farm_join_purpose, 
			farm_join_approval, 
			farm_join_approval_member_id
		FROM 
			tb_farm_member_join
		WHERE
			farm_join_approval IS null
			AND
			farm_join_request_member_id =#{memberId}
	</select>
	<!-- 농가 가입 신청 목록 조회 -->
	
	<!-- 농가 가입신청 중복확인 -->
	<select id="addFarmMemberJoinCheck"  resultMap="farmJoinResultMap" parameterType="String">
		SELECT 
			farm_join_code, 
			farm_code, 
			farm_join_request_member_id, 
			farm_join_request_date, 
			farm_join_purpose, 
			farm_join_approval, 
			farm_join_approval_member_id
		FROM 
			tb_farm_member_join
		WHERE
			farm_join_approval IS null
			AND
			farm_join_request_member_id =#{memberId}
			AND
			farm_code = sf_farm_name_by_code(#{farmName});
	</select>
	<!-- 농가 가입신청 중복확인 -->
	
	<!-- 농가 가입신청 목록 조회 -->
	<select id="getJoinFarm" resultMap="farmJoinResultMap" parameterType ="String">
		SELECT 
			fmj.farm_join_code, 
			fmj.farm_code, 
			fmj.farm_join_request_member_id, 
			m.member_name,
			sf_iden_num_age(m.member_iden_num) AS member_age,
			fmj.farm_join_request_date, 
			fmj.farm_join_purpose
		FROM 
			tb_farm_member_join AS fmj
			JOIN
			tb_member AS m
			ON
			m.member_id = fmj.farm_join_request_member_id
		WHERE
			fmj.farm_join_approval IS null
			AND
			fmj.farm_code = #{farmCode};
	</select>
	<!-- 농가 가입신청 목록 조회 -->
	
	<!-- 농가 가입 승인/거부 -->
	<update id="farmJoinMember" parameterType="String">
		UPDATE tb_farm_member_join
		SET
			farm_join_approval=#{approval},
			farm_join_approval_member_id=#{memberId}
		WHERE 
			farm_join_code=#{farmMemberJoinCode}
	</update>
	<!-- 농가 가입 승인/거부 -->
	
	<!-- 농가 가입신청 정보 조회 -->
	<select id="getJoinMember" resultMap="farmJoinResultMap" parameterType="String">
		SELECT 
			farm_join_code, 
			farm_code, 
			farm_join_request_member_id, 
			farm_join_request_date, 
			farm_join_purpose, 
			farm_join_approval, 
			farm_join_approval_member_id
		FROM 
			tb_farm_member_join
		WHERE
			farm_join_code =#{farmMemberJoinCode}
	</select>
	<!-- 농가 가입신청 정보 조회 -->
	
	<!-- 농가 회원등록 -->
	<insert id="joinAddFarmMember" parameterType="FarmMember">
		INSERT INTO tb_farm_member
			( 
			farm_member_code,
			farm_code, 
			farm_member_id, 
			farm_level_code, 
			farm_join_approval_date, 
			farm_member_status)
		VALUES 
			( 
			sf_farm_member_max_code(),
			#{farmCode}, 
			#{farmMemberId}, 
			#{farmLevelCode}, 
			NOW(), 
			#{farmMemberStatus})
	</insert>
	<!-- 농가 회원등록 -->
	
	<!-- 내 가입 신청 목록 조회  -->
	<select id="myGetJoinFarm" resultMap="farmJoinResultMap" parameterType="String">
		SELECT 
			fmj.farm_join_code, 
			fmj.farm_code, 
			fmj.farm_join_request_member_id, 
			fmj.farm_join_request_date, 
			fmj.farm_join_purpose, 
			fmj.farm_join_approval, 
			fmj.farm_join_approval_member_id,
			f.farm_name,
			f.ceo_member_id,
			f.farm_area, 
			f.farm_address
		FROM 
			tb_farm_member_join AS fmj
			join
			tb_farm AS f
			on
			f.farm_code = fmj.farm_code
		WHERE
			fmj.farm_join_approval IS null
			AND
			fmj.farm_join_request_member_id = #{memberId}
	</select>
	<!-- 내 가입 신청 목록 조회  -->
	
	<!-- 내 가입 신청 취소 -->
	<delete id="removeJoinFarm" parameterType="String">
		DELETE FROM 
			tb_farm_member_join 
		WHERE 
			farm_join_code=#{farmJoinCode}
	</delete>
	<!-- 내 가입 신청 취소 -->
	
	<!-- 농가별 회원 권한 조회 -->
	<select id="getFarmMemberLevel" resultType="String" parameterType="String">
		SELECT sf_code_id_by_level(#{farmCode},#{memberId});
	</select>
	<!-- 농가별 회원 권한 조회 -->
	
	<!-- 농가 탈퇴 신청 중복확인 -->
	<select id="addCancelMemberCheck" resultMap="farmCancelMemberResultMap" parameterType="String">
		SELECT 
				fcr.farm_cancel_request_code, 
				fcr.farm_cancel_request_farm_member_code, 
				fcr.farm_code, 
				fcr.farm_cancel_request_reason, 
				fcr.farm_cancel_request_date, 
				fcr.farm_cancel_approval, 
				fcr.farm_cancel_approval_reason, 
				fcr.farm_cancel_approval_date, 
				fcr.farm_cancel_approval_member_id
			FROM 
				tb_farm_cancel_request AS fcr
			WHERE
				fcr.farm_cancel_approval_member_id IS null
				AND
				fcr.farm_code = sf_add_member_farm_code(#{farmName})
				AND
				fcr.farm_cancel_request_farm_member_code = sf_id_farm_code_by_farm_member_code(#{memberId}, sf_add_member_farm_code(#{farmName}))
	</select>
	<!-- 농가 탈퇴 신청 중복확인 -->
	
	<!-- 농가 탈퇴 신청 등록-->
	<insert id="addCancelMember" parameterType="String">
		INSERT INTO tb_farm_cancel_request
			(
			farm_cancel_request_code, 
			farm_cancel_request_farm_member_code, 
			farm_code, 
			farm_cancel_request_reason, 
			farm_cancel_request_date
			)
		VALUES 
			(
			sf_farm_cancel_request_max_code(),
			sf_id_farm_code_by_farm_member_code(#{memberId}, sf_add_member_farm_code(#{farmName})), 
			sf_add_member_farm_code(#{farmName}), 
			#{cancelRequestReason}, 
			NOW()
			)
	</insert>
	<!-- 농가 탈퇴 신청 등록-->
	
	<!-- 농가 탈퇴 신청 목록 조회 -->
	<select id="getLeaverFarm" resultMap="farmCancelMemberResultMap" parameterType="String">
		SELECT 
			fcr.farm_cancel_request_code, 
			fcr.farm_cancel_request_farm_member_code, 
			fcr.farm_code, 
			fcr.farm_cancel_request_reason, 
			fcr.farm_cancel_request_date, 
			fcr.farm_cancel_approval, 
			fcr.farm_cancel_approval_reason, 
			fcr.farm_cancel_approval_date, 
			fcr.farm_cancel_approval_member_id,
			fm.farm_member_id,
			fm.farm_join_approval_date,
			m.member_name
		FROM 
			tb_farm_cancel_request AS fcr
			join
			tb_farm_member AS fm
			ON
			fm.farm_member_code = fcr.farm_cancel_request_farm_member_code
			join
			tb_member AS m
			on
			m.member_id = fm.farm_member_id
		WHERE
			fcr.farm_cancel_approval_member_id IS null
			AND
			fcr.farm_code = #{farmCode}
			AND
			fcr.farm_cancel_request_farm_member_code != sf_id_farm_code_by_farm_member_code(#{memberId}, #{farmCode})
	</select>
	<!-- 농가 탈퇴 신청 목록 조회 -->
			
	<!-- 농가 탈퇴 신청 승인/거부 -->
	<update id="isLeaverFarm" parameterType="FarmCancelRequest">
		UPDATE tb_farm_cancel_request
		SET
			farm_cancel_approval=#{cancelApproval},
			farm_cancel_approval_reason=#{cancelApprovalReason},
			farm_cancel_approval_date=NOW(),
			farm_cancel_approval_member_id=#{cancelApprovalMemberId}
		WHERE 
			farm_cancel_request_code=#{cancelRequestCode}
	</update>
	<!-- 농가 탈퇴 신청 승인/거부 -->
	
	<!-- 농가 회원 탈퇴 처리 -->
	<update id="leaverFarmMember" parameterType="String">
		UPDATE tb_farm_member
		SET
			farm_member_status='탈퇴'
		WHERE 
			farm_member_code = sf_farm_cancel_request_code_is_member_code(#{cancelRequestCode})
	</update>
	<!-- 농가 회원 탈퇴 처리 -->
	
	<!-- 내 탈퇴 신청 목록 조회 -->
	<select id="myGetLeaverFarm" resultMap="farmCancelMemberResultMap" parameterType="String">
		SELECT 
			fcr.farm_cancel_request_code, 
			fcr.farm_cancel_request_farm_member_code, 
			fcr.farm_code, farm_cancel_request_reason, 
			fcr.farm_cancel_request_date, 
			fcr.farm_cancel_approval, 
			fcr.farm_cancel_approval_reason, 
			fcr.farm_cancel_approval_date, 
			fcr.farm_cancel_approval_member_id,
			f.farm_name,
			f.ceo_member_id,
			f.farm_area,
			f.farm_address
		FROM 
			tb_farm_cancel_request AS fcr
			join
			tb_farm_member AS fm
			on
			fm.farm_member_code = fcr.farm_cancel_request_farm_member_code
			join
			tb_farm AS f
			on
			f.farm_code = fcr.farm_code
		WHERE
			fm.farm_member_id =#{memberId}
	</select>
	<!-- 내 탈퇴 신청 목록 조회 -->
	
	<!-- 농가 탈퇴 신청 취소 -->
	<delete id="cancelLeaverFarm" parameterType="String">
		DELETE 
		FROM 
			tb_farm_cancel_request 
		WHERE 
			farm_cancel_request_code=#{cancelLeaverFarm};
	</delete>
	<!-- 농가 탈퇴 신청 취소 -->
	
	<!-- 농가대표 제외 회원목록 조회 -->
	<select id="farmMemeberList" resultMap="farmMemberResultMap" parameterType="String">
		SELECT 
			fm.farm_member_code, 
			fm.farm_member_id, 
			fm.farm_level_code,
			m.member_name
		FROM 
			tb_farm_member AS fm
			JOIN
			tb_member AS m
			on
			fm.farm_member_id = m.member_id
		WHERE
			fm.farm_code =  #{farmCode}
			AND
			fm.farm_member_status = '정상'
			AND
			fm.farm_level_code != 'farm_level_1';
	</select>
	<!-- 농가대표 제외 회원목록 조회 -->
	
	<!-- 농가 대표 수정 프로시저 -->
	<update id="modifyCeoFarmProcedure" parameterType="String">
		CALL sp_farm_member_code_by_farm_ceo_modify(#{farmMemberCode});
	</update>
	<!-- 농가 대표 수정 프로시저 -->
	
	<!-- 농가대표 회원코드 조회 -->
	<select id="farmCeoMemberCode" resultType="String" parameterType="String">
		SELECT 
			farm_member_code
		FROM 
			tb_farm_member
		WHERE
			farm_member_status = '정상'
			AND
			farm_level_code = 'farm_level_1'
			AND
			farm_code = #{farmCode};
	</select>
	<!-- 농가대표 회원코드 조회 -->
	
	<!-- 회원권한 수정 -->
	<update id="modifyFarmMemberLevel" parameterType="String">
		UPDATE tb_farm_member
		SET
			farm_level_code=#{memberLevel}
		WHERE 
			farm_member_code=#{farmMemberCode};
	</update>
	<!-- 회원권한 수정 -->
	
	<!-- 농가 대표 수정 -->
	<update id="modifyFarmCeo" parameterType="String">
		UPDATE tb_farm
		SET
			ceo_member_id=#{memberId}
		WHERE 
			farm_code=#{farmCode};
	</update>
	<!-- 농가 대표 수정 -->
	
	<!-- 농가대표 수정 확인 -->
	<select id="modifyFarmCeoCheck" resultType="boolean" parameterType="String">
		SELECT sf_modify_Ceo_Farm_Check(#{ceoMemberCode}, #{memberCode}, #{memberId}, #{farmCode})
	</select>
	<!-- 농가대표 수정 확인 -->
	
	<!-- 농가 회원 추방 / 탈퇴처리 -->
	<update id="deportationFarmMember" parameterType="String">
		UPDATE tb_farm_member
		SET
			farm_member_status='탈퇴'
		WHERE 
			farm_member_code=#{farmMemberCode}
	</update>
	<!-- 농가 회원 추방 / 탈퇴처리 -->
	
	<!-- 농가 추방 회원 / 탈퇴신청 등록 -->
	<insert id="deportationCancelRequest" parameterType="String">
		INSERT INTO tb_farm_cancel_request
			(farm_cancel_request_code, 
			farm_cancel_request_farm_member_code, 
			farm_code, 
			farm_cancel_request_reason, 
			farm_cancel_request_date, 
			farm_cancel_approval, 
			farm_cancel_approval_reason, 
			farm_cancel_approval_date, 
			farm_cancel_approval_member_id)
		VALUES 
			(sf_farm_cancel_request_max_code(), 
			#{farmMemberCode}, 
			#{farmCode}, 
			'추방', 
			NOW(), 
			'탈퇴승인', 
			'추방', 
			NOW(), 
			#{memberId})
	</insert>
	<!-- 농가 추방 회원 / 탈퇴신청 등록 -->
	
</mapper>


