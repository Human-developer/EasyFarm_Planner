<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="easyfarm.dao.PlanMapper">
	
	<!-- 보험지출계획 -->
	<resultMap type="InsurancePay" id="resultInsurancePay">
		<result property="insurePayCode" 	column="insure_pay_code"/>
		<result property="projectCode" 		column="project_code"/>
		<result property="insureCompany" 	column="insure_company"/>
		<result property="insureName" 		column="insure_name"/>
		<result property="insureDatail" 	column="insure_datail"/>
		<result property="insureArea" 		column="insure_area"/>
		<result property="insurePayTotal" 	column="insure_pay_total"/>
		<result property="regMemberId" 		column="reg_member_id"/>
		<result property="regDate" 			column="reg_date"/>
	</resultMap>
	
	<!-- 품목카테고리 -->
	<resultMap type="StockCate" id="resultStockCate">
		<result property="stockCateCode"		column="stock_cate_code"/>
		<result property="stockCateName"		column="stock_cate_name"/>
		<result property="regMemberId"			column="reg_member_id"/>
		<result property="regDate"				column="reg_date"/>
	</resultMap>
	
	<!-- 품목 -->
	<resultMap type="StockItem" id="resultStockItem">
		<result property="stockItemCode"					column="stock_item_code"/>
		<result property="farmCode"							column="farm_code"/>
		<result property="stockCateCode"					column="stock_cate_code"/>
		<result property="stockItemName"					column="stock_item_name"/>
		<result property="stockItemQuantity"				column="stock_item_quantity"/>
		<result property="stockItemQuantityUnit"			column="stock_item_quantity_unit"/>
		<result property="stockItemQuantityCapacity"		column="stock_item_quantity_capacity"/>
		<result property="stockItemQuantityCapacityUnit"	column="stock_item_quantity_capacity_unit"/>
		<result property="regMemberId"						column="reg_member_id"/>
		<result property="regDate"							column="reg_date"/>
		<association property="stockCate" 					javaType="StockCate">
			<id 	 property="stockCateCode" 				column="stock_cate_code"/>
			<result  property="stockCateName" 				column="stock_cate_name"/>
		</association>
	</resultMap>
	
	<!-- 공통농기계 -->
	<resultMap type="CommonMachine" id="resultCommonMachine">
		<result property="commonMachineCode"	column="common_machine_code"/>
		<result property="commonMachineName" 	column="common_machine_name"/>
		<result property="regMemberId" 			column="reg_member_id"/>
		<result property="regDate" 				column="reg_date"/>
	</resultMap>
	
	<!-- 농기계즐겨찾기 -->
	<resultMap type="FarmBookmarkMachine" id="resultFarmBookmarkMachine">
		<result property="farmBookmarkMachineCode"	column="farm_bookmark_machine_code"/>
		<result property="commonMachineCode" 		column="common_machine_code"/>
		<result property="farmCode" 				column="farm_code"/>
		<result property="regMemberId" 				column="reg_member_id"/>
		<result property="regDate" 					column="reg_date"/>
	</resultMap>
	
	<!-- 기간별작업단계계획 -->
	<resultMap type="PlanWorkphase" id="resultPlanWorkphase">
		<result property="planWorkphaseCode" 		column="plan_workphase_code"/>
		<result property="projectPlanCode" 			column="project_plan_code"/>
		<result property="projectWorkphaseCode" 	column="project_workphase_code"/>
		<result property="planWorkphaseBegin" 		column="plan_workphase_begin"/>
		<result property="planWorkphaseEnd" 		column="plan_workphase_end"/>
		<result property="planWorkphaseColor" 		column="plan_workphase_color"/>
		<result property="planWorkphaseTextColor" 	column="plan_workphase_text_color"/>
		<result property="regMemberId" 				column="reg_member_id"/>
		<result property="regDate" 					column="reg_date"/>
		<result property="runStatus" 				column="run_status"/>
	</resultMap>
	
	<!-- 작업단계별상세작업항목 -->
	<resultMap type="PlanWorkphaseCate" id="resultPlanWorkphaseCate">
		<result property="planWorkphaseCateCode" 	column="plan_workphase_cate_code"/>
		<result property="projectPlanCode" 			column="project_plan_code"/>
		<result property="planWorkphaseCode" 		column="plan_workphase_code"/>
		<result property="farmWorkphaseCateCode" 	column="farm_workphase_cate_code"/>
		<result property="planWorkphaseCateBegin" 	column="plan_workphase_begin"/>
		<result property="planWorkphaseCateEnd" 	column="plan_workphase_end"/>
		<result property="planWorkphaseColor" 		column="plan_workphase_color"/>
		<result property="planWorkphaseTextColor" 	column="plan_workphase_text_color"/>
		<result property="regMemberId" 				column="reg_member_id"/>
		<result property="regDate" 					column="reg_date"/>
		<result property="runStatus" 				column="run_status"/>
	</resultMap>
	
	<!-- 거래처 -->
	<resultMap type="Client" id="resultClient">
		<result property="clientCode" 		 column="client_code"/>
		<result property="farmCode" 		 column="farm_code"/>
		<result property="clientName" 		 column="client_name"/>
		<result property="clientPhone" 		 column="client_phone"/>
		<result property="clientAddress" 	 column="client_address"/>
		<result property="clientAccountBank" column="client_account_bank"/>
		<result property="clientAccount" 	 column="client_account"/>
		<result property="clientMemo" 		 column="client_memo"/>
		<result property="useStatus" 		 column="use_status"/>
		<result property="regMemberId" 		 column="reg_member_id"/>
		<result property="regDate" 			 column="reg_date"/>
	</resultMap>
	
	<!-- 농자재매입 -->
	<resultMap type="ResourcePay" id="resultResourcePay">
		<result property="resourcePayCode" 				column="resource_pay_code" />
		<result property="farmCode" 					column="farm_code" />
		<result property="clientCode" 					column="client_code" />
		<result property="stockItemCode" 				column="stock_item_code" />
		<result property="stockItemIncomeQuantity" 		column="stock_item_income_quantity" />
		<result property="stockItemIncomeQuantityTotal" column="stock_item_income_quantity_total" />
		<result property="stockItemIncomePerPay" 		column="stock_item_income_per_pay" />
		<result property="stockItemTotalPay" 			column="stock_item_total_pay" />
		<result property="regMemberId" 					column="reg_member_id" />
		<result property="regDate" 						column="reg_date" />
	</resultMap>
	
	
	<select id="getFarmBookmarkMachineList" parameterType="String" resultType="map">
		SELECT
			 fbm.farm_bookmark_machine_code AS farmBookmarkMachineCode
			,cm.common_machine_name 		AS commonMachineName
			,fbm.reg_member_id 				AS regMemberId
			,fbm.reg_date 					AS regDate
		FROM
			tb_farm_bookmark_machine AS fbm
			INNER join
			tb_common_machine AS cm
			on
			fbm.common_machine_code = cm.common_machine_code
		WHERE
			fbm.farm_bookmark_machine_code NOT IN
						(SELECT
							fbm.farm_bookmark_machine_code
						FROM
							tb_farm_retain_machine AS frm
							INNER join
							tb_farm_bookmark_machine AS fbm
							on
							frm.farm_bookmark_machine_code = fbm.farm_bookmark_machine_code
						WHERE
							frm.farm_code = #{farmCode}
							and
							frm.use_status = 'Y')
			and
			fbm.use_status = 'Y'
	</select>
	
	<insert id="addPlanFarmRetainMachine" parameterType="FarmRetainMachine">
		INSERT INTO tb_farm_retain_machine
		(
			 farm_retain_machine_code
			,farm_bookmark_machine_code
			,farm_code
			,use_status
			,reg_member_id
			,reg_date
		)
		VALUES 
		(
			 sf_farm_retain_machine_max_code()
			,#{farmBookmarkMachineCode}
			,#{farmCode}
			,'Y'
			,#{regMemberId}
			, NOW()
		)
	</insert>
	
	<update id="removeFarmBookmarkMachine" parameterType="String">
		UPDATE tb_farm_bookmark_machine
		SET
			use_status='N'
		WHERE
			farm_bookmark_machine_code = #{farmBookmarkMachineCode}
	</update>
	
	<insert id="addFarmBookmarkMachine" parameterType="FarmBookmarkMachine">
		INSERT INTO tb_farm_bookmark_machine
		(
			 farm_bookmark_machine_code
			,common_machine_code
			,farm_code
			,use_status
			,reg_member_id
			,reg_date
		)
		VALUES 
		(
			 sf_farm_bookmark_machine_max_code()
			,#{commonMachineCode}
			,#{farmCode}
			,'Y'
			,#{regMemberId}
			,NOW()
		)
	</insert>
	
	<select id="getFarmCommonMachineList" parameterType="String" resultType="map">
		SELECT
			 common.common_machine_code AS commonMachineCode
			,common.common_machine_name AS commonMachineName
			,common.reg_member_id 		AS regMemberId
			,common.reg_date 			AS regDate
		FROM
			tb_common_machine AS common
		where	
			common.common_machine_code NOT IN (SELECT
			fbm.common_machine_code AS commonCode
		FROM
			tb_farm_bookmark_machine AS fbm
			INNER join
			tb_common_machine AS cm
			on
			fbm.common_machine_code = cm.common_machine_code
		WHERE
			 fbm.farm_code = #{farmCode}
			 and
			 fbm.use_status = 'Y')
	</select>
	
	<insert id="addResourceUsecapacity" parameterType="ResourcePay">
		INSERT INTO tb_resource_usecapacity
		(
			 resource_usecapacity_code
			,resource_pay_code
			,resource_retain_quantity
			,resource_retain_quantity_capacity_extra
			,available_status
			,reg_member_id
			,reg_date
		)
		VALUES 
		(
			 sf_resource_usecapacity_max_code()
			, #{resourcePayCode}
			, #{stockItemIncomeQuantity}
			, #{stockItemIncomeQuantityTotal}
			, "Y"
			, #{regMemberId}
			, NOW()
		)
	</insert>
	
	<update id="modifyPlanResourcePay" parameterType="ResourcePay">
		UPDATE tb_exp_resource_pay
		SET
			client_code							= #{clientCode},
			stock_item_code						= #{stockItemCode},
			stock_item_income_quantity			= #{stockItemIncomeQuantity},
			stock_item_income_quantity_total	= #{stockItemIncomeQuantityTotal},
			stock_item_income_per_pay			= #{stockItemIncomePerPay},
			stock_item_total_pay				= #{stockItemTotalPay}
		WHERE 
			resource_pay_code					= #{resourcePayCode}
	</update>
	
	<select id="getResourcePayInfo" parameterType="String" resultMap="resultResourcePay">
		SELECT 
			 resource_pay_code
			,farm_code
			,client_code
			,stock_item_code
			,stock_item_income_quantity
			,stock_item_income_quantity_total
			,stock_item_income_per_pay
			,stock_item_total_pay
			,reg_member_id
			,reg_date
		FROM 
			tb_exp_resource_pay
		where
			resource_pay_code = #{resourcePayCode}
	</select>
	
	<select id="getStockItemInfoByCode" parameterType="String" resultMap="resultStockItem">
		SELECT
			stock_item_code
			,farm_code
			,stock_cate_code
			,stock_item_name
			,stock_item_quantity
			,stock_item_quantity_unit
			,stock_item_quantity_capacity
			,stock_item_quantity_capacity_unit
			,use_status
			,reg_member_id
			,reg_date
		FROM
			tb_stock_item
		where
			stock_item_code = #{stockItemCode}
	</select>
	
	<select id="getClientInfo" parameterType="String" resultMap="resultClient">
		SELECT
			 client_code
			,farm_code
			,client_name
			,client_phone
			,client_address
			,client_account_bank
			,client_account
			,client_memo
			,use_status
			,reg_member_id
			,reg_date
		FROM
			tb_client
		WHERE
			client_code = #{clientCode}
	
	</select>
	
	<select id="getExpEtcPayList" resultType="map" parameterType="String">
		SELECT
			 plan_workphase_code		AS	planWorkphaseCode
			,project_plan_code			AS	
			,project_workphase_code		AS	
			,plan_workphase_begin		AS	
			,plan_workphase_end			AS	
			,plan_workphase_color		AS	
			,plan_workphase_text_color	AS	
			,reg_member_id				AS	
			,reg_date					AS	
			,run_status					AS	
		FROM 
			tb_exp_etc_pay
		WHERE
			plan_workphase_code = #{}
			and
			<if test="planWorkphaseCateCode == null">
				plan_workphase_cate_code = ''
			</if>
			<if test="planWorkphaseCateCode != null">
				plan_workphase_cate_code = #{planWorkphaseCateCode}
			</if>
	</select>
	
	<insert id="addResourcePay" parameterType="ResourcePay">
		INSERT INTO tb_exp_resource_pay
		(
			 resource_pay_code
			,farm_code
			,client_code
			,stock_item_code
			,stock_item_income_quantity
			,stock_item_income_quantity_total
			,stock_item_income_per_pay
			,stock_item_total_pay
			,reg_member_id
			,reg_date
		)
		VALUES 
		(
			 sf_exp_resource_pay_max_code()
			,#{farmCode}
			,#{clientCode}
			,#{stockItemCode}
			,#{stockItemIncomeQuantity}
			,#{stockItemIncomeQuantityTotal}
			,#{stockItemIncomePerPay}
			,#{stockItemTotalPay}
			,#{regMemberId}
			,NOW()
		)
		<selectKey keyProperty="resourcePayCode" resultType="String" order="AFTER">
			SELECT
				CONCAT('resource_pay_', Max(cast(SUBSTRING_INDEX(erp.resource_pay_code,'_',-1) AS UNSIGNED)))
			FROM
				tb_exp_resource_pay AS erp
		</selectKey>
	</insert>
	
	<update id="removeStockItem" parameterType="StockItem">
		UPDATE tb_stock_item
		SET
			 use_status							= 'N'
		WHERE
			stock_item_code						= #{stockItemCode}
	</update>
	
	<update id="modifyStockItem" parameterType="StockItem">
		UPDATE tb_stock_item
		SET
			 stock_cate_code					= #{stockCateCode}
			,stock_item_name					= #{stockItemName}
			,stock_item_quantity				= #{stockItemQuantity}
			,stock_item_quantity_unit			= #{stockItemQuantityUnit}
			,stock_item_quantity_capacity		= #{stockItemQuantityCapacity}
			,stock_item_quantity_capacity_unit	= #{stockItemQuantityCapacityUnit}
		WHERE
			stock_item_code						= #{stockItemCode}
	</update>
	
	<insert id="addStockItem" parameterType="StockItem">
		INSERT INTO tb_stock_item
		(
			 stock_item_code
			,farm_code
			,stock_cate_code
			,stock_item_name
			,stock_item_quantity
			,stock_item_quantity_unit
			,stock_item_quantity_capacity
			,stock_item_quantity_capacity_unit
			,use_status
			,reg_member_id
			,reg_date
		)
		VALUES
		(
			 sf_stock_item_max_code()
			,#{farmCode}
			,#{stockCateCode}
			,#{stockItemName}
			,#{stockItemQuantity}
			,#{stockItemQuantityUnit}
			,#{stockItemQuantityCapacity}
			,#{stockItemQuantityCapacityUnit}
			,#{useStatus}
			,#{regMemberId}
			, NOW()
		)
	</insert>
	
	<update id="removeClient" parameterType="String">
		UPDATE tb_client
		SET
			 use_status 			= 'N'
		WHERE 
			client_code				= #{clientCode}
	</update>
	
	<update id="modifyClient" parameterType="Client">
		UPDATE tb_client
		SET
			 client_name 			= #{clientName}
			,client_phone 			= #{clientPhone}
			,client_address			= #{clientAddress}
			,client_account_bank	= #{clientAccountBank}
			,client_account			= #{clientAccount}
			,client_memo			= #{clientMemo}
		WHERE 
			client_code				= #{clientCode}
	</update>
	
	<insert id="addClient" parameterType="Client">
		INSERT INTO tb_client
		(
			 client_code
			,farm_code
			,client_name
			,client_phone
			,client_address
			,client_account_bank
			,client_account
			,client_memo
			,use_status
			,reg_member_id
			,reg_date
		)
		VALUES 
		(
			 sf_client_max_code()
			,#{farmCode}
			,#{clientName}
			,#{clientPhone}
			,#{clientAddress}
			,#{clientAccountBank}
			,#{clientAccount}
			,#{clientMemo}
			,#{useStatus}
			,#{regMemberId}
			, NOW()
		)
	</insert>
	
	<select id="getPlanWorkphaseMaxCode" resultType="String">
		SELECT sf_plan_workphase_max_code();
	</select>
	
	<insert id="addPlanWorkphaseCate" parameterType="PlanWorkphaseCate" >
		INSERT INTO tb_plan_workphase_cate
		(
			 plan_workphase_cate_code
			,project_plan_code
			,plan_workphase_code
			,farm_workphase_cate_code
			,plan_workphase_begin
			,plan_workphase_end
			,plan_workphase_color
			,plan_workphase_text_color
			,reg_member_id
			,reg_date
			,run_status
		)
		VALUES 
		(
			 sf_plan_workphase_cate_max_code()
			,#{projectPlanCode}
			,#{planWorkphaseCode}
			,#{farmWorkphaseCateCode}
			,#{planWorkphaseCateBegin}
			,#{planWorkphaseCateEnd}
			,#{planWorkphaseColor}
			,#{planWorkphaseTextColor}
			,#{regMemberId}
			,NOW()
			,#{runStatus}
		)
	
	</insert>
	
	<insert id="addPlanWorkphase" parameterType="PlanWorkphase">
		INSERT INTO tb_plan_workphase
		(
			 plan_workphase_code
			,project_plan_code
			,project_workphase_code
			,plan_workphase_begin
			,plan_workphase_end
			,plan_workphase_color
			,plan_workphase_text_color
			,reg_member_id
			,reg_date
			,run_status
		)
		VALUES
		(
			 #{planWorkphaseCode}
			,#{projectPlanCode}
			,#{projectWorkphaseCode}
			,#{planWorkphaseBegin}
			,#{planWorkphaseEnd}
			,#{planWorkphaseColor}
			,#{planWorkphaseTextColor}
			,#{regMemberId}
			,NOW()
			,#{runStatus}
		)
	</insert>
	
	<!-- 월켈린더 정보가져오기 시작-->
	
	<!-- 단계별작업계획 -->
	<select id="getPlanWorkphaseSchedule" resultType="map" parameterType="String">
		SELECT
			 pw.plan_workphase_code		 	AS planWorkphaseCode
			,cpi.workphase 				 	AS workphase
			,cpi.workphase_name 		 	AS workphaseName
			,pw.plan_workphase_begin 	 	AS planWorkphaseBegin
			,pw.plan_workphase_end			AS planWorkphaseEnd
			,pw.plan_workphase_color 		AS planWorkphaseColor
			,pw.plan_workphase_text_color 	AS planWorkphaseTextColor
		FROM
			tb_plan_workphase AS pw
			LEFT join
			tb_plan_workphase_cate AS pwc
			on
			pw.plan_workphase_code = pwc.plan_workphase_code
			INNER join
			tb_project_workphase AS prw
			on
			pw.project_workphase_code = prw.project_workphase_code
			INNER join
			tb_crop_phase_info AS cpi
			on
			prw.crop_phase_info_code = cpi.crop_phase_info_code
		WHERE
			pw.project_plan_code = #{projectPlanCode}
			and
			pwc.plan_workphase_code IS NULL
	</select>
	
	<!-- 단계별 상세작업계획 -->
	<select id="getPlanWorkphaseCateSchedule" resultType="map" parameterType="String">
		SELECT
			 pwc.plan_workphase_cate_code 						AS planWorkphaseCateCode
			,pw.plan_workphase_code		 						AS planWorkphaseCode
			,pw.plan_workphase_begin 	 						AS planWorkphaseBegin
			,pw.plan_workphase_end								AS planWorkphaseEnd
			,cpi.workphase 										AS workphase
			,cpi.workphase_name 								AS workphaseName
			,cwc.common_workphase_cate_name 					AS commonWorkphaseCateName
			,pwc.plan_workphase_begin 							AS planWorkphaseCateBegin
			,pwc.plan_workphase_end 							AS planWorkphaseCateEnd
			,pwc.plan_workphase_color 							AS planWorkphaseColor
			,pwc.plan_workphase_text_color 						AS planWorkphaseTextColor
		FROM
			tb_plan_workphase_cate AS pwc
			INNER join
			tb_plan_workphase AS pw
			on
			pwc.plan_workphase_code = pw.plan_workphase_code
			INNER join
			tb_farm_workphase_cate AS fwc
			on
			pwc.farm_workphase_cate_code = fwc.farm_workphase_cate_code
			INNER join
			tb_common_workphase_cate AS cwc
			on
			fwc.common_workphase_cate_code = cwc.common_workphase_cate_code
			INNER join
			tb_project_workphase AS prw
			on
			pw.project_workphase_code = prw.project_workphase_code
			INNER join
			tb_crop_phase_info AS cpi
			on
			prw.crop_phase_info_code = cpi.crop_phase_info_code
		WHERE
			pwc.project_plan_code = #{projectPlanCode}
	</select>
	<!-- 월켈린더 정보가져오기 끝-->
	
	<select id="getResourcePayList" resultType="map" parameterType="String">
		SELECT
			 erp.resource_pay_code 					AS resourcePayCode
			,erp.farm_code							AS farmCode
			,erp.client_code 						AS clientCode
			,c.client_name 							AS clientName
			,sc.stock_cate_code 					AS stockCateCode
			,sc.stock_cate_name 					AS stockCateName
			,erp.stock_item_code 					AS stockItemCode
			,si.stock_item_name 					AS stockItemName
			,erp.stock_item_income_quantity 		AS stockItemIncomeQuantity
			,erp.stock_item_income_quantity_total 	AS stockItemIncomeQuantityTotal
			,erp.stock_item_income_per_pay 			AS stockItemIncomePerPay
			,erp.stock_item_total_pay 				AS stockItemTotalPay
		FROM
			tb_exp_resource_pay AS erp
			INNER join
			tb_client AS c
			on
			erp.client_code = c.client_code
			INNER join
			tb_stock_item AS si
			on
			erp.stock_item_code = si.stock_item_code
			INNER join
			tb_stock_cate AS sc
			on
			si.stock_cate_code = sc.stock_cate_code
		WHERE
			erp.farm_code = #{farmCode}
	</select>
	
	<select id="getStockItemList" resultMap="resultStockItem" parameterType="String">
		SELECT
			 si.stock_item_code
			,si.farm_code
			,sc.stock_cate_code
			,sc.stock_cate_name
			,si.stock_item_name
			,si.stock_item_quantity
			,si.stock_item_quantity_unit
			,si.stock_item_quantity_capacity
			,si.stock_item_quantity_capacity_unit
			,si.reg_member_id
		FROM
			tb_stock_item AS si
			INNER join
			tb_stock_cate AS sc
			on
			si.stock_cate_code = sc.stock_cate_code
		where
			si.farm_code = #{farmCode}
			and
			si.use_status = 'Y'
	</select>
	
	<select id="getCommonMachineList" resultMap="resultCommonMachine">
		SELECT 
			 common_machine_code
			,common_machine_name
			,reg_member_id
			,reg_date
		FROM 
			tb_common_machine
	</select>
	
	<select id="getStockCateList" resultMap="resultStockCate">
		SELECT 
			 stock_cate_code
			,stock_cate_name
			,reg_member_id
			,reg_date
		FROM
			tb_stock_cate
	</select>
	
	<update id="modifyInsurePay" parameterType="InsurancePay">
		UPDATE tb_exp_insure_pay
		SET
			 insure_company 	= #{insureCompany}
			,insure_name 		= #{insureName}
			,insure_datail 		= #{insureDatail}
			,insure_area		= #{insureArea}
			,insure_pay_total	= #{insurePayTotal}
		WHERE 
			insure_pay_code		= #{insurePayCode}
	</update>
	
	<insert id="addInsurePay" parameterType="map">
		INSERT INTO tb_exp_insure_pay
		(
			 insure_pay_code
			,project_code
			,insure_company
			,insure_name
			,insure_datail
			,insure_area
			,insure_pay_total
			,reg_member_id
			,reg_date
		)
		VALUES 
		(
			 sf_exp_insure_pay_max_code()
			,#{insurePay.projectCode} 
			,#{insurePay.insureCompany} 
			,#{insurePay.insureName}
			,#{insurePay.insureDatail} 
			,#{insurePay.insureArea}
			,#{insurePay.insurePayTotal}
			,#{regMemberId}
			,NOW()
		)
	
	</insert>
	
	<select id="getInsurePayList" resultMap="resultInsurancePay" parameterType="map">
		SELECT 
			 eip.insure_pay_code
			,eip.project_code
			,eip.insure_company
			,eip.insure_name
			,eip.insure_datail
			,eip.insure_area
			,eip.insure_pay_total
			,eip.reg_member_id
			,eip.reg_date
		FROM 
			tb_exp_insure_pay AS eip
		WHERE
			eip.project_code = #{projectCode}
		<if test="insurePayCode != null and insurePayCode != ''.toString()">
			and
			eip.insure_pay_code = #{insurePayCode}
		</if>
	</select>
  	
  	<insert id="addProjectPlan" parameterType="map">
  		INSERT INTO tb_project_plan
		(
			project_plan_code
			,project_code
			,project_plan_n
			,reg_member_id
			,reg_date
		)
		VALUES
		(	
			 sf_project_plan_max_code()
			,#{projectCode}
			,#{maxProjectPlanNum}
			,#{memberId}
			,NOW()
		)
  	</insert>
  	
  	<select id="getTaxPayCateCode" resultType="map">
  		SELECT
			 tpc.tax_pay_cate_code	AS taxPayCateCode
			,tpc.tax_pay_cate_name	AS taxPayCateName
		FROM
			tb_tax_pay_cate AS tpc
		WHERE
			tpc.use_status = 'O'
  	</select>
  	
  	<select id="getStockItemInfo" resultType="map" parameterType="String">
  		SELECT
  			 si.stock_item_code 						AS stockItemCode
  			,si.stock_item_quantity 					AS stockItemQuantity
			,si.stock_item_quantity_unit 				AS stockItemQuantityUnit
			,si.stock_item_quantity_capacity 			AS stockItemQuantityCapacity
			,si.stock_item_quantity_capacity_unit 		AS stockItemQuantityCapacityUnit
			,erp.stock_item_income_quantity_total 		AS stockItemIncomeQuantityTotal
			,erp.stock_item_income_per_pay 				AS stockItemIncomePerPay
			,ru.resource_retain_quantity 				AS resourceRetainQuantity
			,ru.resource_retain_quantity_capacity_extra AS resourceRetainQuantityCapacityExtra
			,ru.available_status 						AS availableStatus
		FROM
			tb_resource_usecapacity AS ru
			INNER join
			tb_exp_resource_pay AS erp
			on
			ru.resource_pay_code = erp.resource_pay_code
			INNER join
			tb_stock_item AS si
			on
			erp.stock_item_code = si.stock_item_code
		WHERE
			ru.resource_usecapacity_code = #{stockItemCode}
  	</select>
  	
  	<select id="getStockItem" resultType="map" parameterType="map">
  		SELECT
			  c.client_name								AS clientName
			,si.stock_item_code 						AS stockItemCode
			,sc.stock_cate_name							AS stockCateName
			,si.stock_item_name 						AS stockItemName
			,si.stock_item_quantity 					AS stockItemQuantity
			,si.stock_item_quantity_unit 				AS stockItemQuantityUnit
			,si.stock_item_quantity_capacity 			AS stockItemQuantityCapacity
			,si.stock_item_quantity_capacity_unit 		AS stockItemQuantityCapacityUnit
			,ru.resource_usecapacity_code 				AS resourceUsecapacityCode
			,ru.resource_retain_quantity 				AS resourceRetainQuantity
			,ru.resource_retain_quantity_capacity_extra AS resourceRetainQuantityCapacityExtra
			,ru.available_status						AS availableStatus
		FROM
			tb_stock_item AS si
			INNER join
			tb_stock_cate AS sc
			on
			si.stock_cate_code = sc.stock_cate_code
			INNER join
			tb_exp_resource_pay AS erp
			on
			si.stock_item_code = erp.stock_item_code
			INNER join
			tb_client AS c
			on
			erp.client_code = c.client_code
			INNER join
			tb_resource_usecapacity AS ru
			on
			erp.resource_pay_code = ru.resource_pay_code
		WHERE
			si.farm_code = #{farmCode}
		<if test="availableStatus != null and availableStatus != ''.toString()">
			and
			ru.available_status = 'Y'
		</if>
  	</select>
  	
  	<select id="getFarmRetainMachine" resultType="map" parameterType="map">
  		SELECT
			 frm.farm_retain_machine_code	AS farmRetainMachineCode
			,cm.common_machine_name 		AS commonMachineName
			,frm.reg_member_id 				AS regMemberId
			,frm.reg_date 					AS regDate
		FROM
			tb_farm_retain_machine AS frm
			INNER join
			tb_farm_bookmark_machine AS fbm
			on
			frm.farm_bookmark_machine_code = fbm.farm_bookmark_machine_code
			INNER join
			tb_common_machine AS cm
			on
			fbm.common_machine_code = cm.common_machine_code
		WHERE
			frm.farm_code = #{farmCode}
			and
			frm.use_status = 'Y'
  	</select>
  	
  	<select id="getFarmBookmarkMachine" resultType="map" parameterType="map">
  		SELECT
			 fbm.farm_bookmark_machine_code	AS farmBookmarkMachineCode
			,cm.common_machine_code 		AS commonMachineCode
			,cm.common_machine_name 		AS commonMachineName
			,fbm.farm_code					AS farmCode
			,fbm.reg_member_id				AS regMemberId
			,fbm.reg_date					AS regDate
		FROM
			tb_farm_bookmark_machine AS fbm
			INNER join
			tb_common_machine AS cm
			on
			fbm.common_machine_code = cm.common_machine_code
		WHERE
			fbm.farm_code = #{farmCode}
			and
			fbm.use_status = 'Y'
  	</select>
  	
  	<select id="getClientName" resultType="map" parameterType="map">
  		SELECT
			 c.client_code 				AS clientCode
			,c.farm_code				AS farmCode
			,c.client_name 				AS clientName
			,c.client_phone 			AS clientPhone
			,c.client_address 			AS clientAddress
			,c.client_account_bank 		AS clientAccountBank
			,c.client_account 			AS clientAccount
			,c.client_memo 				AS clientMemo
			,c.reg_member_id 			AS regMemberId
			,CAST(c.reg_date AS DATE) 	AS regDate
		FROM
			tb_client AS c
		WHERE
			c.farm_code = #{farmCode}
			and
			c.use_status = 'Y'
  	</select>
  	
  	<select id="getWorkphaseName" resultType="map" parameterType="map">
  		SELECT
  			 pw.project_workphase_code 		AS projectWorkphaseCode
			,cpi.workphase					AS workphase
			,cpi.workphase_name 			AS workphaseName
		FROM
			tb_project_workphase AS pw
			INNER join
			tb_crop_phase_info AS cpi
			on
			pw.crop_phase_info_code = cpi.crop_phase_info_code
			AND
			cpi.use_status = 'O'
		WHERE
			pw.project_code = #{projectCode}
  	</select>
  	
  	<select id="getProjectPlanNList" resultType="map" parameterType="String">
  		SELECT
			 fp.project_code 				AS projectCode
			,fp.project_name 				AS projectName
			,fp.project_area 				AS projectArea
			,fp.project_begin 				AS projectBegin
			,fp.project_end 				AS projectEnd
			,fp.project_estimate_income 	AS projectEstimateIncome
			,fp.project_estimate_spending 	AS projectEstimateSpending
			,pp.project_plan_code 			AS projectPlanCode
			,pp.project_plan_n 				AS projectPlanN
		FROM
			tb_project_plan AS pp
			INNER join
			tb_farm_project AS fp
			on
			pp.project_code = fp.project_code
		WHERE
			fp.project_code = #{projectCode}
		ORDER BY projectPlanN*1 ASC;
  	</select>
  	
  	<select id="getMaxProjectPlanNum" resultType="map" parameterType="String">
  		SELECT
			IFNULL(concat(Max(CAST(REPLACE(pp.project_plan_n,'차','') AS UNSIGNED))+1,'차'),'1차') AS maxProjectPlanNum
		FROM
			tb_project_plan AS pp
		WHERE
			pp.project_code = #{projectCode}
  	</select>
  	
  	<select id="getProjectPlanInfo" resultType="map" parameterType="String">
  		SELECT
			 pp.project_plan_code 			AS projectPlanCode
			,pp.project_code 				AS projectCode
			,pp.project_plan_n 				AS projectPlanN
			,fp.farm_code 					AS farmCode
			,fp.crop_code 					AS cropCode
			,fp.project_name 				AS projectName
			,fp.project_area 				AS projectArea
			,fp.project_begin 				AS projectBegin
			,fp.project_end 				AS projectEnd
			,fp.project_estimate_income 	AS projectEstimateIncome
			,fp.project_estimate_spending 	AS projectEstimateSpending
		FROM
			tb_project_plan AS pp
			INNER join
			tb_farm_project AS fp
			on
			pp.project_code = fp.project_code
		WHERE
			pp.project_plan_code = #{projectPlanCode}
  	</select>
  	
  	<select id="getWorkphaseCateName" resultType="map" parameterType="map">
  		SELECT
  			 fwc.farm_workphase_cate_code		AS farmWorkphaseCateCode
			,cwc.common_workphase_cate_name 	AS commonWorkphaseCateName
		FROM
			tb_farm_workphase_cate AS fwc
			INNER join
			tb_common_workphase_cate AS cwc
			on
			fwc.common_workphase_cate_code = cwc.common_workphase_cate_code
		WHERE
			fwc.project_code = #{projectCode}
  	</select>
	
	<select id="getFarmProjectInfo" resultType="map" parameterType="String">
		SELECT
			 fp.project_name 				AS projectName
			,fp.project_area 				AS projectArea
			,fp.project_begin 				AS projectBegin
			,fp.project_end 				AS projectEnd
			,fp.project_estimate_income 	AS projectEstimateIncome
			,fp.project_estimate_spending 	AS projectEstimateSpending
		FROM
			tb_farm_project AS fp
		WHERE
			fp.project_code = #{projectCode}
	</select>
  	
</mapper>
  
  
  