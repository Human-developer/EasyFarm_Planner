<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="easyfarm.dao.MemberMapper">

	<resultMap type="Report" id="reportResultMap">   
		 <result property="reportHistoryCode"		column="report_history_code"/>
		 <result property="reportedMemberId"		column="reported_member_id"/>
		 <result property="reportMemberId"			column="report_member_id"/>
		 <result property="reportCode"				column="report_code"/>
		 <result property="reportDetailReason"		column="report_detail_reason"/>
		 <result property="reportDate"				column="report_date"/>
		 <result property="reportApproval"			column="report_approval"/>
		 <result property="reportApprovalReason"	column="report_approval_reason"/>
		 <result property="reportApprovalDate"		column="report_approval_date"/>
		 <result property="reportReason"			column="report_reason"/>
		 <result property="reportBanDays"			column="report_ban_days"/>
		 <result property="reportRegDate"			column="report_reg_date"/>
		 <result property="statusCriteriaCode"		column="status_criteria_code"/>
		 <result property="statusCriteriaName"		column="status_criteria_name"/>
		 <result property="statusCriteriaDays"		column="status_criteria_days"/>
		 <result property="memberId"				column="member_id"/>
		 <result property="loginMemberId"			column="login_member_id"/>
		 <result property="regDate"					column="reg_date"/>
		 <result property="useStatus"				column="use_status"/>
		 <result property="autoRestNum"				column="auto_rest_num"/>
		 <result property="autoRestDate"			column="auto_rest_date"/>
		 <result property="autoWithdrawalDate"		column="auto_withdrawal_date"/>
		 <result property="banCurrentCode"			column="ban_current_code"/>
		 <result property="banMemberId"				column="ban_member_id"/>
		 <result property="banBeginDate"			column="ban_begin_date"/>
		 <result property="banEndDate"				column="ban_end_date"/>
	</resultMap>
	
	<select id="getExpectedDate" resultMap="reportResultMap">
		SELECT 
			  auto_rest_num
			, login_member_id
			, auto_rest_date
			, auto_withdrawal_date
		FROM 
			tb_member_status_schedule
	</select>
	<select id="getBaseDate" resultMap="reportResultMap" >
		SELECT 
			  status_criteria_code
			, status_criteria_name
			, status_criteria_days
			, member_id
			, reg_date
			, use_status
		FROM 
			tb_member_status_criteria_set
		
			<if test="statusCriteriaCode != ''.toString() and statusCriteriaCode != null">
				WHERE status_criteria_code = #{statusCriteriaCode}
			</if>
		
	</select>
	
	<insert id="addBaseDate" parameterType="Report">
		INSERT INTO 
			tb_member_status_criteria_set
		(	  
			  status_criteria_code
			, status_criteria_name
			, status_criteria_days
			, member_id
			, reg_date
			
		)
		VALUES 
		(	
			  sf_member_status_criteria_max_code()
			, #{statusCriteriaName}
			, #{statusCriteriaDays}
			, #{memberId}
			, NOW()
			
	)
	</insert>
	
	<update id="modifyBaseDate" parameterType="Report">
		UPDATE 
			tb_member_status_criteria_set
		SET
			  status_criteria_name= #{statusCriteriaName}
			, status_criteria_days= #{statusCriteriaDays}
			, member_id= #{memberId}
			, reg_date= NOW()
			, use_status= #{useStatus}
		WHERE status_criteria_code= #{statusCriteriaCode}
	</update>
	
	<delete id="removeBaseDate">
		DELETE FROM tb_member_status_criteria_set WHERE status_criteria_code=#{statusCriteriaCode}
	</delete>
	
	<select id="getReasonReport" resultMap="reportResultMap">
		SELECT 
			  report_code
			, report_reason
			, report_ban_days
			, report_reg_date
			, member_id
			, use_status
		FROM tb_report_reason
		<if test="reportCode != ''.toString() and reportCode != null">
				WHERE report_code = #{reportCode}
		</if>
		
	</select>
	
	<insert id="addReasonReport" parameterType="Report">
		INSERT INTO 
			tb_report_reason
		(	
		  report_code
		, report_reason
		, report_ban_days
		, report_reg_date
		, member_id
		, use_status
		)
		VALUES (
		  sf_report_max_code()
 		, #{reportReason}
		, #{reportBanDays}
		, NOW()
		, #{memberId}
		, #{useStatus}
		)
	</insert>
	
	<update id="modifyReasonReport" parameterType="Report">
		UPDATE 
			tb_report_reason
		SET			
			report_reason= #{reportReason},
			report_ban_days= #{reportBanDays},
			report_reg_date= NOW(),
			member_id= #{memberId},
			use_status= #{useStatus}
			
		WHERE report_code=#{reportCode}
	</update>
	
	<delete id="removeReasonReport">
		DELETE FROM tb_report_reason WHERE report_code=#{reportCode}
	</delete>
	
	<select id="getReport" resultMap="reportResultMap">
		SELECT 
			  l.report_history_code
			, l.reported_member_id
			, l.report_member_id
			, l.report_code
			, l.report_detail_reason
			, l.report_date
			, l.report_approval
			, l.report_approval_reason
			, l.report_approval_date
			, r.report_reason
			, l.use_status
		FROM 
			tb_report_history as l
			join
			tb_report_reason AS r
			on
			l.report_code = r.report_code
		<if test="memberId != null and memberId != ''.toString()">
		WHERE l.report_member_id = #{memberId}
		</if>
	</select>
	<delete id="removeReport">
		DELETE FROM tb_report_history WHERE report_history_code=#{reportHistoryCode}
	</delete>
	<update id="removeReportHistory">
		UPDATE tb_report_history
		SET
		use_status='N'
		WHERE report_history_code=#{reportHistoryCode}
	</update>
	
	<update id="resultReport">
		UPDATE 
			tb_report_history
		SET
			report_approval_reason=#{reportApprovalReason},
			report_approval=#{reportApproval},
			report_approval_date=NOW()
		WHERE report_history_code=#{reportHistoryCode};
	</update>
	
	<insert id="addReport">
		INSERT INTO tb_report_history
		(
		  reported_member_id
		, report_member_id
		, report_code
		, report_detail_reason
		, report_date
		)
		VALUES
		(
		  #{reportedMemberId}
		, #{reportMemberId}
		, #{reportCode}
		, #{reportDetailReason}
		, NOW()
		)	
	</insert>
	
	<select id="getSuspend" resultMap="reportResultMap">
		SELECT 
		      b.ban_current_code
			, b.ban_member_id
			, b.report_code
			, b.ban_begin_date
			, b.ban_end_date
			, r.report_reason
			, r.report_ban_days
		FROM 
			tb_ban_current_situation AS b
		join
			tb_report_reason AS r
		on
			b.report_code = r.report_code
		<if test="reporedId != null and reporedId != ''.toString()">
			WHERE b.ban_member_id = #{reporedId}
		</if> 
	</select>
	<delete id="removeBan">
		DELETE FROM tb_ban_current_situation WHERE ban_current_code=#{banCode}
	</delete>
	<insert id="addBanCurrentSituation">
		INSERT INTO tb_ban_current_situation
			(
			 ban_current_code 
			, ban_member_id
			, report_code
			, ban_begin_date
			, ban_end_date
			)
		VALUES 
			(
			sf_ban_current_situation_max_code()
			, #{reportedId}
			, #{reportCode}
			, NOW()
			, #{banEndDate}
			)
	</insert>
	<update id="updateMember">
		UPDATE tb_member
		SET
			member_status='정지'
		WHERE member_id=#{reportedId}
	</update>
	<update id="updateMemberCancel">
		UPDATE tb_member
		SET
			member_status='정상'
		WHERE member_id=#{banId}
	</update>
	<select id="getstatusCriteriaName"  resultMap="reportResultMap">
		SELECT 
			 status_criteria_days
			,status_criteria_name
		FROM 
			tb_member_status_criteria_set
	</select>
	
	<update id="modifyBaseDateStatus">
		UPDATE tb_member_status_criteria_set
		SET
			use_status='N'
		WHERE status_criteria_code=#{statusCode} and status_criteria_name = #{statusName}
	</update>
	<update id="cancelBaseDateStatus">
		UPDATE tb_member_status_criteria_set
		SET
			use_status='Y'
		WHERE status_criteria_code=#{statusCode} and status_criteria_name = #{statusName}
	</update>
	<select id="getStatus" resultMap="reportResultMap">
		SELECT 
		      status_criteria_code
			, status_criteria_name
			, status_criteria_days
			, member_id
			, reg_date
			, use_status
		FROM 
			tb_member_status_criteria_set 
		WHERE 
			status_criteria_name = #{statusName} 
		ORDER 
			BY reg_date DESC 
		LIMIT 1
	</select>
	<select id="getStatusDays" resultMap="reportResultMap">
		SELECT 
			status_criteria_code
			, status_criteria_name
			, status_criteria_days
			, member_id
			, reg_date
			, use_status
		FROM 
			tb_member_status_criteria_set
		WHERE status_criteria_name = #{statusName} AND use_status = 'Y'
	</select>
	
	<insert id="addStatusSchedule">
		INSERT INTO tb_member_status_schedule
		( auto_rest_num
		, login_member_id
		, auto_rest_date
		, auto_withdrawal_date
		)
		VALUES 
		( 
		  sf_member_status_schedule_max_code()
		, #{loginId}
		, #{autoRestDate}
		, #{autoWithdrawalDate}
		)
		
	</insert>
	<select id="updateStatusSchedule">
		UPDATE tb_member_status_schedule
		SET
			auto_rest_date=#{autoRestDate},
			auto_withdrawal_date=#{autoWithdrawalDate}
		WHERE login_member_id=#{loginId}
	</select>
</mapper>